
struct Person {
    const int32_t Age;
    const std::u32string_view Name;
    const Person* Other;

    Person(const int32_t age, const std::u32string_view name, const Person* other) : Age(age), Name(name), Other(other) { }
};

// This file is auto-generated. Do not edit manually.
// Structure: BinarySearch
#pragma once
#include <array>
#include <cstdint>
#include <limits>
#include <string_view>

class BinarySearchStructure_Int32_3 final
{
    static constexpr std::array<int32_t, 3> keys = {
        1, 2, 3
    };

public:
    [[nodiscard]]
    static bool contains(const int32_t key) noexcept
    {
        if (key < 1 || key > 3)
            return false;

        size_t lo = 0;
        size_t hi = 2;
        while (lo <= hi)
        {
            const size_t mid = lo + ((hi - lo) >> 1);

            if (keys[mid] == key)
                return true;

            if (keys[mid] < key)
                lo = mid + 1;
            else
                hi = mid - 1;
        }

        return false;
    }
    static std::array<Person*, 3> values;

    [[nodiscard]]
    static bool try_lookup(const int32_t key, const Person*& value) noexcept
    {
        if (key < 1 || key > 3)
            return false;

        size_t lo = 0;
        size_t hi = 2;
        while (lo <= hi)
        {
            const size_t mid = lo + ((hi - lo) >> 1);

            if (keys[mid] == key)
            {
                value = values[mid];
                return true;
            }

            if (keys[mid] < key)
                lo = mid + 1;
            else
                hi = mid - 1;
        }

        value = nullptr;
        return false;
    }

    static constexpr size_t item_count = 3;
    static constexpr int32_t min_key = 1;
    static constexpr int32_t max_key = 3;

public:
    BinarySearchStructure_Int32_3() = delete;
    BinarySearchStructure_Int32_3(const BinarySearchStructure_Int32_3&) = delete;
    BinarySearchStructure_Int32_3& operator=(const BinarySearchStructure_Int32_3&) = delete;
    BinarySearchStructure_Int32_3(BinarySearchStructure_Int32_3&&) = delete;
    BinarySearchStructure_Int32_3& operator=(BinarySearchStructure_Int32_3&&) = delete;
};
std::array<Person*, 3> BinarySearchStructure_Int32_3::values = {
    new Person(1, U"Bob", new Person(4, U"Anna", nullptr)),
    new Person(2, U"Billy", nullptr),
    new Person(3, U"Bibi", nullptr),

};
