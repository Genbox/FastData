// This file is auto-generated. Do not edit manually.
// Structure: Auto (Conditional)
#pragma once
#include <array>
#include <cstdint>
#include <limits>
#include <string_view>

class my_data final
{
public:
    [[nodiscard]]
    static bool contains(const double value) noexcept
    {
        if (value < std::numeric_limits<double>::lowest() || value > std::numeric_limits<double>::max())
            return false;

        if (value == std::numeric_limits<double>::lowest() || value == 0.0 || value == std::numeric_limits<double>::max())
            return true;

        return false;
    }

    static constexpr size_t item_count = 3;
    static constexpr double min_value = std::numeric_limits<double>::lowest();
    static constexpr double max_value = std::numeric_limits<double>::max();

public:
    my_data() = delete;
    my_data(const my_data&) = delete;
    my_data& operator=(const my_data&) = delete;
    my_data(my_data&&) = delete;
    my_data& operator=(my_data&&) = delete;
};