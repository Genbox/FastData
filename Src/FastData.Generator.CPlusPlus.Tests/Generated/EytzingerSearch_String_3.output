// This file is auto-generated. Do not edit manually.
// Structure: EytzingerSearch
#include <string>
#include <array>
#include <cstdint>

class MyData
{
    inline static const std::array<std::string, 3> entries = {
        "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "a", "item"
    };

public:
    static bool contains(const std::string& value)
    {
        if (const size_t len = value.length(); len < 1 || len > 255)
            return false;

        unsigned int i = 0;
        while (i < entries.size())
        {
            const int comparison = entries[i].compare(value);

            if (comparison == 0)
                return true;

            if (comparison < 0)
                i = 2 * i + 2;
            else
                i = 2 * i + 1;
        }

        return false;
    }

    static constexpr int item_count = 3;
    static constexpr int min_length = 1;
    static constexpr int max_length = 255;
};