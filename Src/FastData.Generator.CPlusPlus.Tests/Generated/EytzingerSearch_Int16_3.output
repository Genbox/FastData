// This file is auto-generated. Do not edit manually.
// Structure: EytzingerSearch
#include <array>
#include <cstdint>

class EytzingerSearch_Int16_3
{
    inline static const std::array<int16_t, 3> entries = {
        0, -1, 1
    };

public:
    static bool contains(const int16_t& value)
    {
        if (const size_t len = value.length(); len < -1 || len > 1)
            return false;

        unsigned int i = 0;
        while (i < entries.size())
        {
            const int comparison = entries[i].compare(value);

            if (comparison == 0)
                return true;

            if (comparison < 0)
                i = 2 * i + 2;
            else
                i = 2 * i + 1;
        }

        return false;
    }

    static constexpr int item_count = 3;
    static constexpr int8_t min_value = -1;
    static constexpr int8_t max_value = 1;
};