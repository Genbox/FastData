// This file is auto-generated. Do not edit manually.
// Structure: PerfectHashBruteForce
#include <array>
#include <cstdint>

class MyData
{
    struct E
    {
        bool value;
        uint32_t hash_code;

        E(const bool& value, const uint32_t hash_code)
        : value(value), hash_code(hash_code) {}
    };

    inline static const std::array<E, 1> entries = {
        E(true, 0)
    };

    static uint32_t get_hash(const bool value, uint32_t seed,)
    {
        return reinterpret_cast<uint32_t>(value ^ seed);
    }

public:
    static bool contains(const bool& value)
    {


        const uint32_t hash = get_hash(value, 1);
        const uint32_t index = hash % 1;
        const E& entry = entries[index];

        return hash == entry.hash_code && value == entry.value;
    }

    static constexpr int item_count = 1;
};