// This file is auto-generated. Do not edit manually.
// Structure: EytzingerSearch
#include <array>
#include <cstdint>

class MyData
{
    inline static const std::array<float, 5> entries = {
        1f, -1f, 3.4028235E+38f, -3.4028235E+38f, 0f
    };

public:
    static bool contains(const float& value)
    {
        if (value < -3.4028234663852886E+38f || value > 3.4028234663852886E+38f)
            return false;

        unsigned int i = 0;
        while (i < entries.size())
        {
            const int comparison = entries[i].compare(value);

            if (comparison == 0)
                return true;

            if (comparison < 0)
                i = 2 * i + 2;
            else
                i = 2 * i + 1;
        }

        return false;
    }

    static constexpr int item_count = 5;
    static constexpr float min_value = -3.4028234663852886E+38f;
    static constexpr float max_value = 3.4028234663852886E+38f;
};