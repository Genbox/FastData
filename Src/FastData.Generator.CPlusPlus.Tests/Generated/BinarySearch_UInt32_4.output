// This file is auto-generated. Do not edit manually.
// Structure: BinarySearch
#pragma once
#include <array>
#include <cstdint>

class my_data
{
    static constexpr std::array<uint32_t, 4> entries = {
        0u, 1u, 2u, 4294967295u
    };

public:
    static bool contains(const uint32_t& value)
    {
        if (value < 0u || value > 4294967295u)
            return false;

        int lo = 0;
        int hi = 3;
        while (lo <= hi)
        {
            const int i = lo + ((hi - lo) >> 1);
            const int order = (value > entries[i]) - (value < entries[i]);

            if (order == 0)
                return true;
            if (order < 0)
                lo = i + 1;
            else
                hi = i - 1;
        }

        return ~lo >= 0;
    }

    static constexpr unsigned int item_count = 4;
    static constexpr uint32_t min_value = 0u;
    static constexpr uint32_t max_value = 4294967295u;
};