// This file is auto-generated. Do not edit manually.
// Structure: HashSet (HashSetChain)
#pragma once
#include <array>
#include <cstdint>
#include <limits>
#include <string_view>

class HashSetChainStructure_Char_3 final
{
    struct e
    {
        
        int8_t next;
        char value;

        e(const int8_t next, const char value)
           : next(next), value(value) {}
    };

    static constexpr std::array<int8_t, 3> buckets = {
        1, 3, 0
     };

    inline static const std::array<e, 3> entries = {
        e(-1, 0), e(-1, 97), e(1, 127)
    };

    static constexpr uint64_t get_hash(const char value) noexcept
    {
        return static_cast<uint64_t>(value);
    }

public:
    [[nodiscard]]
    static bool contains(const char value) noexcept
    {
        if (value < 0 || value > 127)
            return false;

        const uint64_t hash = get_hash(value);
        const size_t index = hash % 3;
        int8_t i = buckets[index] - static_cast<int8_t>(1);

        while (i >= 0)
        {
            const auto& [next, value1] = entries[i];

            if (value1 == value)
                return true;

            i = next;
        }

        return false;
    }

    static constexpr size_t item_count = 3;
    static constexpr char min_value = 0;
    static constexpr char max_value = 127;

public:
    HashSetChainStructure_Char_3() = delete;
    HashSetChainStructure_Char_3(const HashSetChainStructure_Char_3&) = delete;
    HashSetChainStructure_Char_3& operator=(const HashSetChainStructure_Char_3&) = delete;
    HashSetChainStructure_Char_3(HashSetChainStructure_Char_3&&) = delete;
    HashSetChainStructure_Char_3& operator=(HashSetChainStructure_Char_3&&) = delete;
};