// This file is auto-generated. Do not edit manually.
// Structure: KeyLength
#pragma once
#include <array>
#include <cstdint>
#include <limits>
#include <string_view>

class my_data final
{
    static constexpr std::array<std::string_view, 4> entries = {
        "a", "", "aaa", "aaaa"
    };

public:
    [[nodiscard]]
    static bool contains(const std::string_view value) noexcept
    {
        if ((13ULL & 1ULL << (value.length() - 1) % 64) == 0)
            return false;

        return value == entries[value.length() - 1];
    }

    static constexpr size_t item_count = 3;
    static constexpr size_t min_length = 1;
    static constexpr size_t max_length = 4;

public:
    my_data() = delete;
    my_data(const my_data&) = delete;
    my_data& operator=(const my_data&) = delete;
    my_data(my_data&&) = delete;
    my_data& operator=(my_data&&) = delete;
};