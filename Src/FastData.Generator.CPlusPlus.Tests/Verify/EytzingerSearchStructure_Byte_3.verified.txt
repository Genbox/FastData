// This file is auto-generated. Do not edit manually.
// Structure: BinarySearch (EytzingerSearch)
#pragma once
#include <array>
#include <cstdint>
#include <limits>
#include <string_view>

class EytzingerSearchStructure_Byte_3 final
{
    static constexpr std::array<uint8_t, 3> entries = {
        1, 0, std::numeric_limits<uint8_t>::max()
    };

public:
    [[nodiscard]]
    static bool contains(const uint8_t value) noexcept
    {
        if (value < 0 || value > std::numeric_limits<uint8_t>::max())
            return false;

        size_t i = 0;
        while (i < entries.size())
        {
            if (entries[i] == value)
                return true;

            if (entries[i] < value)
                i = 2 * i + 2;
            else
                i = 2 * i + 1;
        }

        return false;
    }

    static constexpr size_t item_count = 3;
    static constexpr uint8_t min_value = 0;
    static constexpr uint8_t max_value = std::numeric_limits<uint8_t>::max();

public:
    EytzingerSearchStructure_Byte_3() = delete;
    EytzingerSearchStructure_Byte_3(const EytzingerSearchStructure_Byte_3&) = delete;
    EytzingerSearchStructure_Byte_3& operator=(const EytzingerSearchStructure_Byte_3&) = delete;
    EytzingerSearchStructure_Byte_3(EytzingerSearchStructure_Byte_3&&) = delete;
    EytzingerSearchStructure_Byte_3& operator=(EytzingerSearchStructure_Byte_3&&) = delete;
};