// This file is auto-generated. Do not edit manually.
// Structure: HashSet
#pragma once
#include <array>
#include <cstdint>
#include <limits>
#include <string_view>

class HashSetLinearStructure_Int64_5 final
{
    struct b
    {
        uint8_t start_index;
        uint8_t end_index;

        b(const uint8_t start_index, const uint8_t end_index)
        : start_index(start_index), end_index(end_index) { }
    };

    inline static const std::array<b, 17> buckets = {
        b(0, 0), b(1, 1), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(2, 2), b(0, 0), b(3, 3), 
        b(0, 0), b(0, 0), b(0, 0), b(4, 4), b(0, 0), b(0, 0), b(0, 0)
    };

    static constexpr std::array<int64_t, 5> items = {
        0ll, 1ll, 9223372036854775806ll, std::numeric_limits<int64_t>::lowest(), -5ll
    };

    static constexpr std::array<uint64_t, 5> hash_codes = {
        0, 1, 9223372036854775806, 9223372036854775808, 18446744073709551611
    };

    static uint64_t get_hash(const int64_t value) noexcept
    {
        return static_cast<uint64_t>(value);
    }

public:
    [[nodiscard]]
    static bool contains(const int64_t value) noexcept
    {
        if (value < std::numeric_limits<int64_t>::lowest() || value > 9223372036854775806ll)
            return false;

        const uint64_t hash = get_hash(value);
        const auto& [start_index, end_index]= buckets[hash % 17];

        uint8_t index = start_index;

        while (index <= end_index)
        {
            if (hash_codes[index] == hash && items[index] == value)
                return true;

            index++;
        }

        return false;
    }

    static constexpr size_t item_count = 5;
    static constexpr int64_t min_value = std::numeric_limits<int64_t>::lowest();
    static constexpr int64_t max_value = 9223372036854775806ll;

public:
    HashSetLinearStructure_Int64_5() = delete;
    HashSetLinearStructure_Int64_5(const HashSetLinearStructure_Int64_5&) = delete;
    HashSetLinearStructure_Int64_5& operator=(const HashSetLinearStructure_Int64_5&) = delete;
    HashSetLinearStructure_Int64_5(HashSetLinearStructure_Int64_5&&) = delete;
    HashSetLinearStructure_Int64_5& operator=(HashSetLinearStructure_Int64_5&&) = delete;
};