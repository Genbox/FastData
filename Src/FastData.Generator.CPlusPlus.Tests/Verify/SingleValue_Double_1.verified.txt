// This file is auto-generated. Do not edit manually.
// Structure: SingleValue
#pragma once
#include <array>
#include <cstdint>
#include <limits>
#include <string_view>

class my_data final
{
public:
    [[nodiscard]]
    static constexpr bool contains(const double value) noexcept
    {
        return value == std::numeric_limits<double>::lowest();
    }
    static constexpr size_t item_count = 1;
    static constexpr double min_value = std::numeric_limits<double>::lowest();
    static constexpr double max_value = std::numeric_limits<double>::lowest();

public:
    my_data() = delete;
    my_data(const my_data&) = delete;
    my_data& operator=(const my_data&) = delete;
    my_data(my_data&&) = delete;
    my_data& operator=(my_data&&) = delete;
};