// This file is auto-generated. Do not edit manually.
// Structure: Array
#pragma once
#include <array>
#include <cstdint>
#include <limits>
#include <string_view>

class my_data final
{
    static constexpr std::array<int32_t, 3> entries = {
        std::numeric_limits<int32_t>::lowest(), 0, std::numeric_limits<int32_t>::max()
    };

public:
    [[nodiscard]]
    static bool contains(const int32_t value) noexcept
    {
        if (value < std::numeric_limits<int32_t>::lowest() || value > std::numeric_limits<int32_t>::max())
            return false;

        for (size_t i = 0; i < 3; i++)
        {
            if (entries[i] == value)
               return true;
        }
        return false;
    }

    static constexpr size_t item_count = 3;
    static constexpr int32_t min_value = std::numeric_limits<int32_t>::lowest();
    static constexpr int32_t max_value = std::numeric_limits<int32_t>::max();

public:
    my_data() = delete;
    my_data(const my_data&) = delete;
    my_data& operator=(const my_data&) = delete;
    my_data(my_data&&) = delete;
    my_data& operator=(my_data&&) = delete;
};