// This file is auto-generated. Do not edit manually.
// Structure: BinarySearch (EytzingerSearch)
#pragma once
#include <array>
#include <cstdint>
#include <limits>
#include <string_view>

class EytzingerSearchStructure_Char_3 final
{
    static constexpr std::array<char, 3> keys = {
        97, 0, 127
    };

public:
    [[nodiscard]]
    static bool contains(const char key) noexcept
    {
        if (key < 0 || key > 127)
            return false;

        size_t i = 0;
        while (i < keys.size())
        {
            if (keys[i] == key)
                return true;

            if (keys[i] < key)
                i = 2 * i + 2;
            else
                i = 2 * i + 1;
        }

        return false;
    }

    static constexpr size_t item_count = 3;
    static constexpr char min_value = 0;
    static constexpr char max_value = 127;

public:
    EytzingerSearchStructure_Char_3() = delete;
    EytzingerSearchStructure_Char_3(const EytzingerSearchStructure_Char_3&) = delete;
    EytzingerSearchStructure_Char_3& operator=(const EytzingerSearchStructure_Char_3&) = delete;
    EytzingerSearchStructure_Char_3(EytzingerSearchStructure_Char_3&&) = delete;
    EytzingerSearchStructure_Char_3& operator=(EytzingerSearchStructure_Char_3&&) = delete;
};