// This file is auto-generated. Do not edit manually.
// Structure: Array
#pragma once
#include <array>
#include <cstdint>
#include <limits>
#include <string_view>

class ArrayStructure_Byte_3 final
{
    static constexpr std::array<uint8_t, 3> entries = {
        0, 1, std::numeric_limits<uint8_t>::max()
    };

public:
    [[nodiscard]]
    static bool contains(const uint8_t value) noexcept
    {
        if (value < 0 || value > std::numeric_limits<uint8_t>::max())
            return false;

        for (size_t i = 0; i < 3; i++)
        {
            if (entries[i] == value)
               return true;
        }
        return false;
    }

    static constexpr size_t item_count = 3;
    static constexpr uint8_t min_value = 0;
    static constexpr uint8_t max_value = std::numeric_limits<uint8_t>::max();

public:
    ArrayStructure_Byte_3() = delete;
    ArrayStructure_Byte_3(const ArrayStructure_Byte_3&) = delete;
    ArrayStructure_Byte_3& operator=(const ArrayStructure_Byte_3&) = delete;
    ArrayStructure_Byte_3(ArrayStructure_Byte_3&&) = delete;
    ArrayStructure_Byte_3& operator=(ArrayStructure_Byte_3&&) = delete;
};