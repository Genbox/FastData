// This file is auto-generated. Do not edit manually.
// Structure: HashTable (HashTableChain)
#pragma once
#include <array>
#include <cstdint>
#include <limits>
#include <string_view>

class HashTableChainStructure_Single_5_HashZeroOrNaN final
{
    struct e
    {
        uint64_t hash_code;
        int8_t next;
        float key;

        e(const uint64_t hash_code, const int8_t next, const float key)
           : hash_code(hash_code), next(next), key(key) {}
    };

    static constexpr std::array<int8_t, 5> buckets = {
        0, 1, 4, 3, 5
     };

    inline static const std::array<e, 5> entries = {
        e(1065353216, -1, 1.0f), e(1073741824, -1, 2.0f), e(1077936128, -1, 3.0f), e(1082130432, -1, 4.0f), e(1084227584, 1, 5.0f)
    };

    static uint64_t get_hash(const float value) noexcept
    {
        uint32_t bits;
        std::memcpy(&bits, &value, sizeof(bits));
        return bits;
    }

public:
    [[nodiscard]]
    static bool contains(const float key) noexcept
    {
        if (key < 1.0f || key > 5.0f)
            return false;

        const uint64_t hash = get_hash(key);
        const size_t index = hash % 5;
        int8_t i = buckets[index] - static_cast<int8_t>(1);

        while (i >= 0)
        {
            const auto& [hash_code, next, key1] = entries[i];

            if (hash_code == hash && key1 == key)
                return true;

            i = next;
        }

        return false;
    }

    static constexpr size_t item_count = 5;
    static constexpr float min_value = 1.0f;
    static constexpr float max_value = 5.0f;

public:
    HashTableChainStructure_Single_5_HashZeroOrNaN() = delete;
    HashTableChainStructure_Single_5_HashZeroOrNaN(const HashTableChainStructure_Single_5_HashZeroOrNaN&) = delete;
    HashTableChainStructure_Single_5_HashZeroOrNaN& operator=(const HashTableChainStructure_Single_5_HashZeroOrNaN&) = delete;
    HashTableChainStructure_Single_5_HashZeroOrNaN(HashTableChainStructure_Single_5_HashZeroOrNaN&&) = delete;
    HashTableChainStructure_Single_5_HashZeroOrNaN& operator=(HashTableChainStructure_Single_5_HashZeroOrNaN&&) = delete;
};