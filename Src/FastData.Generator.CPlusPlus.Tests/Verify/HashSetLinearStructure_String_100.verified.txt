// This file is auto-generated. Do not edit manually.
// Structure: HashSet (HashSetLinear)
#pragma once
#include <array>
#include <cstdint>
#include <limits>
#include <string_view>

class HashSetLinearStructure_String_100 final
{
    struct b
    {
        uint8_t start_index;
        uint8_t end_index;

        b(const uint8_t start_index, const uint8_t end_index)
        : start_index(start_index), end_index(end_index) { }
    };

    inline static const std::array<b, 293> buckets = {
        b(0, 0), b(0, 0), b(1, 1), b(0, 0), b(0, 0), b(0, 0), b(2, 2), b(0, 0), b(0, 0), b(0, 0), 
        b(3, 4), b(0, 0), b(0, 0), b(0, 0), b(5, 6), b(0, 0), b(7, 7), b(8, 8), b(0, 0), b(0, 0), 
        b(0, 0), b(9, 9), b(0, 0), b(10, 10), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(0, 0), 
        b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(11, 12), b(0, 0), b(0, 0), b(0, 0), b(0, 0), 
        b(13, 13), b(14, 14), b(15, 15), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(16, 16), b(17, 17), b(0, 0), 
        b(0, 0), b(0, 0), b(18, 18), b(0, 0), b(0, 0), b(0, 0), b(19, 19), b(0, 0), b(0, 0), b(0, 0), 
        b(0, 0), b(20, 20), b(21, 21), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(22, 22), b(23, 23), 
        b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(0, 0), 
        b(0, 0), b(24, 25), b(0, 0), b(26, 27), b(0, 0), b(0, 0), b(0, 0), b(28, 29), b(30, 30), b(0, 0), 
        b(31, 32), b(0, 0), b(0, 0), b(0, 0), b(33, 34), b(0, 0), b(0, 0), b(0, 0), b(35, 35), b(0, 0), 
        b(0, 0), b(0, 0), b(36, 37), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(38, 38), b(39, 39), b(40, 40), 
        b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(41, 41), b(42, 42), b(0, 0), b(0, 0), b(0, 0), b(43, 43), 
        b(0, 0), b(0, 0), b(0, 0), b(44, 45), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(46, 46), 
        b(47, 47), b(0, 0), b(48, 48), b(0, 0), b(0, 0), b(0, 0), b(49, 49), b(0, 0), b(0, 0), b(50, 50), 
        b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(51, 52), b(0, 0), 
        b(0, 0), b(0, 0), b(0, 0), b(53, 53), b(54, 54), b(55, 55), b(0, 0), b(0, 0), b(0, 0), b(0, 0), 
        b(56, 56), b(57, 57), b(0, 0), b(0, 0), b(0, 0), b(58, 58), b(0, 0), b(0, 0), b(0, 0), b(0, 0), 
        b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(59, 59), b(60, 60), b(0, 0), b(0, 0), b(0, 0), b(0, 0), 
        b(0, 0), b(61, 61), b(62, 62), b(0, 0), b(0, 0), b(0, 0), b(63, 63), b(0, 0), b(0, 0), b(0, 0), 
        b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(64, 65), b(0, 0), b(66, 66), b(0, 0), b(0, 0), b(0, 0), 
        b(67, 68), b(69, 69), b(0, 0), b(70, 70), b(0, 0), b(0, 0), b(0, 0), b(71, 72), b(0, 0), b(0, 0), 
        b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(73, 74), b(0, 0), b(0, 0), b(0, 0), b(0, 0), 
        b(75, 75), b(76, 76), b(77, 77), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(78, 78), b(79, 79), b(0, 0), 
        b(0, 0), b(0, 0), b(80, 80), b(0, 0), b(0, 0), b(0, 0), b(81, 81), b(0, 0), b(0, 0), b(0, 0), 
        b(0, 0), b(82, 82), b(83, 83), b(0, 0), b(0, 0), b(84, 84), b(0, 0), b(0, 0), b(85, 85), b(86, 86), 
        b(0, 0), b(0, 0), b(87, 87), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(0, 0), 
        b(0, 0), b(88, 89), b(0, 0), b(90, 91), b(0, 0), b(0, 0), b(0, 0), b(92, 92), b(93, 93), b(0, 0), 
        b(94, 95), b(0, 0), b(0, 0), b(0, 0), b(96, 96), b(0, 0), b(0, 0), b(0, 0), b(97, 97), b(0, 0), 
        b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(0, 0), b(98, 98), b(99, 99), b(0, 0), 
        b(0, 0), b(0, 0), b(0, 0)
    };

    static constexpr std::array<std::u32string_view, 100> items = {
        U"86", U"41", U"6", U"38", U"9", U"35", U"13", U"75", U"29", U"24", 
        U"64", U"30", U"16", U"92", U"53", U"21", U"83", U"42", U"3", U"19", 
        U"95", U"70", U"84", U"61", U"37", U"11", U"77", U"59", U"78", U"56", 
        U"26", U"66", U"48", U"69", U"47", U"0", U"32", U"14", U"90", U"51", 
        U"23", U"81", U"40", U"5", U"39", U"8", U"72", U"28", U"98", U"63", 
        U"89", U"31", U"17", U"93", U"54", U"20", U"82", U"45", U"2", U"96", 
        U"71", U"87", U"60", U"7", U"34", U"12", U"74", U"79", U"57", U"25", 
        U"65", U"68", U"46", U"33", U"15", U"91", U"52", U"22", U"80", U"43", 
        U"4", U"18", U"94", U"73", U"99", U"85", U"62", U"88", U"36", U"10", 
        U"76", U"58", U"55", U"27", U"67", U"49", U"44", U"1", U"97", U"50"
    };

    static constexpr std::array<uint64_t, 100> hash_codes = {
        11144406865724064596, 11144406297235594013, 18225461104721359418, 11144406337953776479, 18225461125080450651, 11144406358312867712, 11144406358312867712, 11144406139061115972, 11144406488297834815, 11144406508656926048, 
        11144406289405174308, 11144406350482448007, 11144406350482448007, 11144406720078258083, 11144406151589787500, 11144406500826506343, 11144406870422316419, 11144406301933845836, 18225461109419611241, 11144406342652028302, 
        11144406712247838378, 11144406143759367795, 11144406862591896714, 11144406294103426131, 11144406355180699830, 11144406355180699830, 11144406135928948090, 11144406135928948090, 11144406156288039323, 11144406156288039323, 
        11144406505524758166, 11144406286273006426, 11144406286273006426, 11144406306632097659, 11144406306632097659, 18225461114117863064, 11144406347350280125, 11144406347350280125, 11144406716946090201, 11144406148457619618, 
        11144406497694338461, 11144406867290148537, 11144406298801677954, 18225461106287443359, 11144406339519860420, 18225461126646534592, 11144406140627199913, 11144406489863918756, 11144406729474761729, 11144406290971258249, 
        11144406879818820065, 11144406352048531948, 11144406352048531948, 11144406721644342024, 11144406153155871441, 11144406502392590284, 11144406871988400360, 11144406303499929777, 18225461110985695182, 11144406713813922319, 
        11144406145325451736, 11144406864157980655, 11144406295669510072, 18225461103155275477, 11144406356746783771, 11144406356746783771, 11144406137495032031, 11144406157854123264, 11144406157854123264, 11144406507090842107, 
        11144406287839090367, 11144406308198181600, 11144406308198181600, 11144406348916364066, 11144406348916364066, 11144406718512174142, 11144406150023703559, 11144406499260422402, 11144406868856232478, 11144406300367761895, 
        18225461107853527300, 11144406341085944361, 11144406710681754437, 11144406142193283854, 11144406731040845670, 11144406861025812773, 11144406292537342190, 11144406881384904006, 11144406353614615889, 11144406353614615889, 
        11144406134362864149, 11144406134362864149, 11144406154721955382, 11144406503958674225, 11144406284706922485, 11144406284706922485, 11144406305066013718, 18225461112551779123, 11144406715380006260, 11144406146891535677
    };

    static constexpr uint64_t get_hash(const std::u32string_view value) noexcept
    {
    uint64_t hash = 352654597;

    for (char32_t ch : value)
        hash = (((hash << 5) | (hash >> 27)) + hash) ^ static_cast<uint32_t>(ch);

    return 352654597 + (hash * 1566083941);
    }

public:
    [[nodiscard]]
    static bool contains(const std::u32string_view value) noexcept
    {
        if (const size_t len = value.length(); len < 1u || len > 2u)
            return false;

        const uint64_t hash = get_hash(value);
        const auto& [start_index, end_index]= buckets[hash % 293];

        uint8_t index = start_index;

        while (index <= end_index)
        {
            if (hash_codes[index] == hash && items[index] == value)
                return true;

            index++;
        }

        return false;
    }

    static constexpr size_t item_count = 100;
    static constexpr size_t min_length = 1;
    static constexpr size_t max_length = 2;

public:
    HashSetLinearStructure_String_100() = delete;
    HashSetLinearStructure_String_100(const HashSetLinearStructure_String_100&) = delete;
    HashSetLinearStructure_String_100& operator=(const HashSetLinearStructure_String_100&) = delete;
    HashSetLinearStructure_String_100(HashSetLinearStructure_String_100&&) = delete;
    HashSetLinearStructure_String_100& operator=(HashSetLinearStructure_String_100&&) = delete;
};