// This file is auto-generated. Do not edit manually.
// Structure: BinarySearch
#pragma once
#include <array>
#include <cstdint>
#include <limits>

class my_data
{
    static constexpr std::array<double, 3> entries = {
        std::numeric_limits<double>::lowest(), 0.0, std::numeric_limits<double>::max()
    };

public:
    static bool contains(const double value)
    {
        if (value < std::numeric_limits<double>::lowest() || value > std::numeric_limits<double>::max())
            return false;

        int lo = 0;
        int hi = 2;
        while (lo <= hi)
        {
            const int mid = lo + ((hi - lo) >> 1);

            if (entries[mid] == value)
                return true;

            if (entries[mid] < value)
                lo = mid + 1;
            else
                hi = mid - 1;
        }

        return false;
    }

    static constexpr unsigned int item_count = 3;
    static constexpr double min_value = std::numeric_limits<double>::lowest();
    static constexpr double max_value = std::numeric_limits<double>::max();
};