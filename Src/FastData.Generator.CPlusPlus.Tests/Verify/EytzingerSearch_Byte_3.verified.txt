// This file is auto-generated. Do not edit manually.
// Structure: EytzingerSearch
#pragma once
#include <array>
#include <cstdint>

class my_data
{
    static constexpr std::array<uint8_t, 3> entries = {
        1, 0, 255
    };

public:
    static bool contains(const uint8_t value)
    {
        if (value < 0 || value > 255)
            return false;

        unsigned int i = 0;
        while (i < entries.size())
        {
            const int comparison = (value > entries[i]) - (value < entries[i]);

            if (comparison == 0)
                return true;

            if (comparison < 0)
                i = 2 * i + 2;
            else
                i = 2 * i + 1;
        }

        return false;
    }

    static constexpr unsigned int item_count = 3;
    static constexpr uint8_t min_value = 0;
    static constexpr uint8_t max_value = 255;
};