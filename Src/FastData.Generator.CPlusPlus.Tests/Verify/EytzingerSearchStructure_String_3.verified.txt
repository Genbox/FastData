// This file is auto-generated. Do not edit manually.
// Structure: BinarySearch
#pragma once
#include <array>
#include <cstdint>
#include <limits>
#include <string_view>

class EytzingerSearchStructure_String_3 final
{
    static constexpr std::array<std::string_view, 3> entries = {
        "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "a", "item"
    };

public:
    [[nodiscard]]
    static bool contains(const std::string_view value) noexcept
    {
        if (const size_t len = value.length(); len < 1u || len > 255u)
            return false;

        size_t i = 0;
        while (i < entries.size())
        {
            if (entries[i] == value)
                return true;

            if (entries[i] < value)
                i = 2 * i + 2;
            else
                i = 2 * i + 1;
        }

        return false;
    }

    static constexpr size_t item_count = 3;
    static constexpr size_t min_length = 1;
    static constexpr size_t max_length = 255;

public:
    EytzingerSearchStructure_String_3() = delete;
    EytzingerSearchStructure_String_3(const EytzingerSearchStructure_String_3&) = delete;
    EytzingerSearchStructure_String_3& operator=(const EytzingerSearchStructure_String_3&) = delete;
    EytzingerSearchStructure_String_3(EytzingerSearchStructure_String_3&&) = delete;
    EytzingerSearchStructure_String_3& operator=(EytzingerSearchStructure_String_3&&) = delete;
};