// This file is auto-generated. Do not edit manually.
// Structure: BinarySearch
#pragma once
#include <array>
#include <cstdint>
#include <limits>
#include <string_view>

class BinarySearchStructure_UInt64_4 final
{
    static constexpr std::array<uint64_t, 4> entries = {
        0, 1ull, 2ull, std::numeric_limits<uint64_t>::max()
    };

public:
    [[nodiscard]]
    static bool contains(const uint64_t value) noexcept
    {
        if (value < 0 || value > std::numeric_limits<uint64_t>::max())
            return false;

        size_t lo = 0;
        size_t hi = 3;
        while (lo <= hi)
        {
            const size_t mid = lo + ((hi - lo) >> 1);

            if (entries[mid] == value)
                return true;

            if (entries[mid] < value)
                lo = mid + 1;
            else
                hi = mid - 1;
        }

        return false;
    }

    static constexpr size_t item_count = 4;
    static constexpr uint64_t min_value = 0;
    static constexpr uint64_t max_value = std::numeric_limits<uint64_t>::max();

public:
    BinarySearchStructure_UInt64_4() = delete;
    BinarySearchStructure_UInt64_4(const BinarySearchStructure_UInt64_4&) = delete;
    BinarySearchStructure_UInt64_4& operator=(const BinarySearchStructure_UInt64_4&) = delete;
    BinarySearchStructure_UInt64_4(BinarySearchStructure_UInt64_4&&) = delete;
    BinarySearchStructure_UInt64_4& operator=(BinarySearchStructure_UInt64_4&&) = delete;
};