// This file is auto-generated. Do not edit manually.
// Structure: HashSet
#pragma once
#include <array>
#include <cstdint>
#include <limits>
#include <string_view>

class HashSetChainStructure_Int64_5 final
{
    struct e
    {
        uint64_t hash_code;
        int8_t next;
        int64_t value;

        e(const uint64_t hash_code, const int8_t next, const int64_t value)
           : hash_code(hash_code), next(next), value(value) {}
    };

    static constexpr std::array<int8_t, 5> buckets = {
        3, 5, 0, 1, 0
     };

    inline static const std::array<e, 5> entries = {
        e(9223372036854775808, -1, std::numeric_limits<int64_t>::lowest()), e(18446744073709551611, -1, -5ll), e(0, -1, 0ll), e(1, 1, 1ll), e(9223372036854775806, 3, 9223372036854775806ll)
    };

    static uint64_t get_hash(const int64_t value) noexcept
    {
        return static_cast<uint64_t>(value);
    }

public:
    [[nodiscard]]
    static bool contains(const int64_t value) noexcept
    {
        if (value < std::numeric_limits<int64_t>::lowest() || value > 9223372036854775806ll)
            return false;

        const uint64_t hash = get_hash(value);
        const size_t index = hash % 5;
        int8_t i = buckets[index] - 1;

        while (i >= 0)
        {
            const auto& [hash_code, next, value1] = entries[i];

            if (hash_code == hash && value1 == value)
                return true;

            i = next;
        }

        return false;
    }

    static constexpr size_t item_count = 5;
    static constexpr int64_t min_value = std::numeric_limits<int64_t>::lowest();
    static constexpr int64_t max_value = 9223372036854775806ll;

public:
    HashSetChainStructure_Int64_5() = delete;
    HashSetChainStructure_Int64_5(const HashSetChainStructure_Int64_5&) = delete;
    HashSetChainStructure_Int64_5& operator=(const HashSetChainStructure_Int64_5&) = delete;
    HashSetChainStructure_Int64_5(HashSetChainStructure_Int64_5&&) = delete;
    HashSetChainStructure_Int64_5& operator=(HashSetChainStructure_Int64_5&&) = delete;
};