// This file is auto-generated. Do not edit manually.
// Structure: Array
#pragma once
#include <array>
#include <cstdint>
#include <limits>
#include <string_view>

class my_data final
{
    static constexpr std::array<std::string_view, 3> entries = {
        "item1", "item2", "item3"
    };

public:
    [[nodiscard]]
    static bool contains(const std::string_view value) noexcept
    {
        if (value.length() != 5u)
            return false;

        for (size_t i = 0; i < 3; i++)
        {
            if (entries[i] == value)
               return true;
        }
        return false;
    }

    static constexpr size_t item_count = 3;
    static constexpr size_t min_length = 5;
    static constexpr size_t max_length = 5;

public:
    my_data() = delete;
    my_data(const my_data&) = delete;
    my_data& operator=(const my_data&) = delete;
    my_data(my_data&&) = delete;
    my_data& operator=(my_data&&) = delete;
};