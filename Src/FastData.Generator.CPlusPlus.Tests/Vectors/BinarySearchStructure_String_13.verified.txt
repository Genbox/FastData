// This file is auto-generated. Do not edit manually.
// Structure: BinarySearch
#pragma once
#include <array>
#include <cstdint>
#include <limits>
#include <string_view>

class BinarySearchStructure_String_13 final
{
    static constexpr std::array<std::u32string_view, 13> keys = {
        U"ß", U"à", U"ä", U"å", U"æ", U"ç", U"è", U"é", U"ê", U"ñ", 
        U"ö", U"ø", U"ü"
    };

public:
    [[nodiscard]]
    static bool contains(const std::u32string_view key) noexcept
    {
        if (key.length() != 1u)
            return false;

        size_t lo = 0;
        size_t hi = 12;
        while (lo <= hi)
        {
            const size_t mid = lo + ((hi - lo) >> 1);

            if (keys[mid] == key)
                return true;

            if (keys[mid] < key)
                lo = mid + 1;
            else
                hi = mid - 1;
        }

        return false;
    }


    static constexpr size_t item_count = 13;
    static constexpr size_t min_key_length = 1;
    static constexpr size_t max_key_length = 1;

public:
    BinarySearchStructure_String_13() = delete;
    BinarySearchStructure_String_13(const BinarySearchStructure_String_13&) = delete;
    BinarySearchStructure_String_13& operator=(const BinarySearchStructure_String_13&) = delete;
    BinarySearchStructure_String_13(BinarySearchStructure_String_13&&) = delete;
    BinarySearchStructure_String_13& operator=(BinarySearchStructure_String_13&&) = delete;
};