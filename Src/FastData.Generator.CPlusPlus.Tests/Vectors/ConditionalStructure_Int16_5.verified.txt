// This file is auto-generated. Do not edit manually.
// Structure: Conditional
#pragma once
#include <array>
#include <cstdint>
#include <limits>
#include <string_view>

class ConditionalStructure_Int16_5 final
{
public:
    [[nodiscard]]
    static constexpr bool contains(const int16_t key) noexcept
    {
        if (key < std::numeric_limits<int16_t>::lowest() || key > std::numeric_limits<int16_t>::max())
            return false;

        if (key == std::numeric_limits<int16_t>::lowest() || key == -1 || key == 0 || key == 1 || key == std::numeric_limits<int16_t>::max())
            return true;

        return false;
    }

    static constexpr size_t item_count = 5;
    static constexpr int16_t min_key = std::numeric_limits<int16_t>::lowest();
    static constexpr int16_t max_key = std::numeric_limits<int16_t>::max();
};