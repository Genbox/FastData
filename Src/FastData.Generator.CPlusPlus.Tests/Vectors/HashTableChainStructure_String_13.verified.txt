// This file is auto-generated. Do not edit manually.
// Structure: HashTable (HashTableChain)
#pragma once
#include <array>
#include <cstdint>
#include <limits>
#include <string_view>

class HashTableChainStructure_String_13 final
{
    struct e
    {
        uint64_t hash_code;
        int8_t next;
        std::u32string_view key;

        e(const uint64_t hash_code, const int8_t next, const std::u32string_view key)
           : hash_code(hash_code), next(next), key(key) {}
    };

    static constexpr std::array<int8_t, 13> buckets = {
        6, 13, 10, 0, 11, 2, 12, 3, 7, 0, 
        0, 0, 0
     };

    inline static const std::array<e, 13> entries = {
        e(18225460979434644138, -1, U"æ"), e(18225460988831147784, -1, U"à"), e(18225460982566812020, -1, U"ä"), e(18225461004491987194, -1, U"ö"), e(18225461020152826604, 0, U"ü"), e(18225461065569260893, 3, U"ß"), e(18225460999793735371, 4, U"é"), e(18225461001359819312, -1, U"è"), e(18225460998227651430, -1, U"ê"), e(18225460977868560197, 8, U"ç"), 
        e(18225461012322406899, -1, U"ñ"), e(18225461026417162368, -1, U"ø"), e(18225460981000728079, 7, U"å")
    };

    static constexpr uint64_t get_hash(const std::u32string_view value) noexcept
    {
    uint64_t hash = 352654597;

    for (char32_t ch : value)
        hash = (((hash << 5) | (hash >> 27)) + hash) ^ static_cast<uint32_t>(ch);

    return 352654597 + (hash * 1566083941);
    }

public:
    [[nodiscard]]
    static bool contains(const std::u32string_view key) noexcept
    {
        if (key.length() != 1u)
            return false;

        const uint64_t hash = get_hash(key);
        const size_t index = hash % 13;
        int8_t i = buckets[index] - static_cast<int8_t>(1);

        while (i >= 0)
        {
            const auto& [hash_code, next, key1] = entries[i];

            if (hash_code == hash && key1 == key)
                return true;

            i = next;
        }

        return false;
    }

    static constexpr size_t item_count = 13;
    static constexpr size_t min_length = 1;
    static constexpr size_t max_length = 1;

public:
    HashTableChainStructure_String_13() = delete;
    HashTableChainStructure_String_13(const HashTableChainStructure_String_13&) = delete;
    HashTableChainStructure_String_13& operator=(const HashTableChainStructure_String_13&) = delete;
    HashTableChainStructure_String_13(HashTableChainStructure_String_13&&) = delete;
    HashTableChainStructure_String_13& operator=(HashTableChainStructure_String_13&&) = delete;
};