// This file is auto-generated. Do not edit manually.
// Structure: BinarySearch (EytzingerSearch)
#pragma once
#include <array>
#include <cstdint>
#include <limits>
#include <string_view>

class EytzingerSearchStructure_Int64_5 final
{
    static constexpr std::array<int64_t, 5> keys = {
        1ll, -1ll, std::numeric_limits<int64_t>::max(), std::numeric_limits<int64_t>::lowest(), 0ll
    };

public:
    [[nodiscard]]
    static bool contains(const int64_t key) noexcept
    {
        if (key < std::numeric_limits<int64_t>::lowest() || key > std::numeric_limits<int64_t>::max())
            return false;

        size_t i = 0;
        while (i < keys.size())
        {
            if (keys[i] == key)
                return true;

            if (keys[i] < key)
                i = 2 * i + 2;
            else
                i = 2 * i + 1;
        }

        return false;
    }

    static constexpr size_t item_count = 5;
    static constexpr int64_t min_key = std::numeric_limits<int64_t>::lowest();
    static constexpr int64_t max_key = std::numeric_limits<int64_t>::max();

public:
    EytzingerSearchStructure_Int64_5() = delete;
    EytzingerSearchStructure_Int64_5(const EytzingerSearchStructure_Int64_5&) = delete;
    EytzingerSearchStructure_Int64_5& operator=(const EytzingerSearchStructure_Int64_5&) = delete;
    EytzingerSearchStructure_Int64_5(EytzingerSearchStructure_Int64_5&&) = delete;
    EytzingerSearchStructure_Int64_5& operator=(EytzingerSearchStructure_Int64_5&&) = delete;
};