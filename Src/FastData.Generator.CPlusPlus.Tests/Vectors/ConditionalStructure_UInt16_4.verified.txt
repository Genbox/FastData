// This file is auto-generated. Do not edit manually.
// Structure: Conditional
#pragma once
#include <array>
#include <cstdint>
#include <limits>
#include <string_view>

class ConditionalStructure_UInt16_4 final
{
public:
    [[nodiscard]]
    static bool contains(const uint16_t key) noexcept
    {
        if (key < 0 || key > std::numeric_limits<uint16_t>::max())
            return false;

        if (key == 0 || key == 1 || key == 2 || key == std::numeric_limits<uint16_t>::max())
            return true;

        return false;
    }


    static constexpr size_t item_count = 4;
    static constexpr uint16_t min_key = 0;
    static constexpr uint16_t max_key = std::numeric_limits<uint16_t>::max();

public:
    ConditionalStructure_UInt16_4() = delete;
    ConditionalStructure_UInt16_4(const ConditionalStructure_UInt16_4&) = delete;
    ConditionalStructure_UInt16_4& operator=(const ConditionalStructure_UInt16_4&) = delete;
    ConditionalStructure_UInt16_4(ConditionalStructure_UInt16_4&&) = delete;
    ConditionalStructure_UInt16_4& operator=(ConditionalStructure_UInt16_4&&) = delete;
};