// This file is auto-generated. Do not edit manually.
// Structure: Array
#pragma once
#include <array>
#include <cstdint>
#include <limits>
#include <string_view>

class ArrayStructure_UInt16_4 final
{
static constexpr std::array<uint16_t, 4> keys = {
        0, 1, 2, std::numeric_limits<uint16_t>::max()
};

public:
    [[nodiscard]]
    static constexpr bool contains(const uint16_t key) noexcept
    {
        if (key < 0 || key > std::numeric_limits<uint16_t>::max())
            return false;

        for (size_t i = 0; i < 4; i++)
        {
            if (keys[i] == key)
               return true;
        }
        return false;
    }

    static constexpr size_t item_count = 4;
    static constexpr uint16_t min_key = 0;
    static constexpr uint16_t max_key = std::numeric_limits<uint16_t>::max();
};