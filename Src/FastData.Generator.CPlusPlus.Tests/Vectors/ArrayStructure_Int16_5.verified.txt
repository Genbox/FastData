// This file is auto-generated. Do not edit manually.
// Structure: Array
#pragma once
#include <array>
#include <cstdint>
#include <limits>
#include <string_view>

class ArrayStructure_Int16_5 final
{

    static std::array<uint8_t, 5> values;

    static constexpr std::array<int16_t, 5> keys = {
        std::numeric_limits<int16_t>::lowest(), -1, 0, 1, std::numeric_limits<int16_t>::max()
    };

public:
    [[nodiscard]]
    static bool try_lookup(const int16_t key, uint8_t*& value) noexcept
    {
        if (key < std::numeric_limits<int16_t>::lowest() || key > std::numeric_limits<int16_t>::max())
            return false;

        for (size_t i = 0; i < 5; i++)
        {
            if (keys[i] == key)
            {
                value = &values[i];
                return true;
            }
        }
        return false;
    }

    [[nodiscard]]
    static bool contains(const int16_t key) noexcept
    {
        if (key < std::numeric_limits<int16_t>::lowest() || key > std::numeric_limits<int16_t>::max())
            return false;

        for (size_t i = 0; i < 5; i++)
        {
            if (keys[i] == key)
               return true;
        }
        return false;
    }

    static constexpr size_t item_count = 5;
    static constexpr int16_t min_value = std::numeric_limits<int16_t>::lowest();
    static constexpr int16_t max_value = std::numeric_limits<int16_t>::max();

public:
    ArrayStructure_Int16_5() = delete;
    ArrayStructure_Int16_5(const ArrayStructure_Int16_5&) = delete;
    ArrayStructure_Int16_5& operator=(const ArrayStructure_Int16_5&) = delete;
    ArrayStructure_Int16_5(ArrayStructure_Int16_5&&) = delete;
    ArrayStructure_Int16_5& operator=(ArrayStructure_Int16_5&&) = delete;
};
std::array<uint8_t, 5> ArrayStructure_Int16_5::values = {
        42, 42, 42, 42, 42
};
