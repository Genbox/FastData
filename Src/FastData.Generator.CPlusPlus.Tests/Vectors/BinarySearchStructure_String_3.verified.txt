// This file is auto-generated. Do not edit manually.
// Structure: BinarySearch
#pragma once
#include <array>
#include <cstdint>
#include <limits>
#include <string_view>

class BinarySearchStructure_String_3 final {
    static constexpr std::array<std::string_view, 3> keys = {
        "a", "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "item"
    };

public:
    [[nodiscard]]
    static constexpr bool contains(const std::string_view key) noexcept {
        if (const size_t len = key.length(); len < 1u || len > 255u)
            return false;

        int32_t lo = 0;
        int32_t hi = 2;
        while (lo <= hi) {
            const int32_t mid = lo + ((hi - lo) >> 1);
            const std::string_view mid_key = keys[mid];

            if (mid_key == key)
                return true;

            if (mid_key < key)
                lo = mid + 1;
            else
                hi = mid - 1;
        }

        return false;
    }

    static constexpr size_t item_count = 3;
    static constexpr size_t min_key_length = 1;
    static constexpr size_t max_key_length = 255;
};