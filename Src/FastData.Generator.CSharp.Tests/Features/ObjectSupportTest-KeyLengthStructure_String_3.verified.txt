// <auto-generated />
// This file is auto-generated. Do not edit manually.
// Structure: Auto (KeyLength)
#nullable enable
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
public class Person
{
    public Person(int age, string name, Person other)
    {
        Age = age;
        Name = name;
        Other = other;
    }
    int Age { get; set; }
    string Name { get; set; }
    Person Other { get; set; }

};

internal static class KeyLengthStructure_String_3
{
    private static readonly int[] _offsets = {
        0, 1, 2
    };
    private static readonly Person[] _values = {
        new Person(1, "Bob", new Person(4, "Anna", null)), new Person(2, "Billy", null), new Person(3, "Bibi", null)
    };
    private static readonly string[] _keys = {
        "a", "aa", "aaa"
    };

    
    public static bool Contains(string key)
    {
        if (key.Length < 1u || key.Length > 3u)
            return false;

        return StringComparer.Ordinal.Equals(key, _keys[key.Length - 1]);
    }
public static bool TryLookup(string key, out Person value)
{
    value = default;
        if (key.Length < 1u || key.Length > 3u)
            return false;

    int idx = key.Length - 1;
    if (StringComparer.Ordinal.Equals(key, _keys[idx]))
    {
        value = _values[_offsets[idx]];
        return true;
    }

    value = default;
    return false;
}

    public const uint ItemCount = 3;
    public const uint MinKeyLength = 1;
    public const uint MaxKeyLength = 3;
}