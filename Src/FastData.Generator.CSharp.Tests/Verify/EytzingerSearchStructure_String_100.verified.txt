// <auto-generated />
// This file is auto-generated. Do not edit manually.
// Structure: BinarySearch (EytzingerSearch)
#nullable enable
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

internal static class EytzingerSearchStructure_String_100
{
    private static readonly string[] _keys = new string[] {
        "66", "37", "85", "22", "51", "78", "92", "15", "3", "44", 
        "59", "73", "81", "89", "96", "11", "19", "26", "33", "40", 
        "48", "55", "62", "7", "76", "8", "83", "87", "90", "94", 
        "98", "1", "13", "17", "20", "24", "28", "31", "35", "39", 
        "42", "46", "5", "53", "57", "60", "64", "68", "71", "75", 
        "77", "79", "80", "82", "84", "86", "88", "9", "91", "93", 
        "95", "97", "99", "0", "10", "12", "14", "16", "18", "2", 
        "21", "23", "25", "27", "29", "30", "32", "34", "36", "38", 
        "4", "41", "43", "45", "47", "49", "50", "52", "54", "56", 
        "58", "6", "61", "63", "65", "67", "69", "70", "72", "74"
    };

    
    public static bool Contains(string key)
    {
        if (key.Length < 1u || key.Length > 2u)
            return false;

        int i = 0;
        while (i < _keys.Length)
        {
            int comparison = StringComparer.Ordinal.Compare(_keys[i], key);

            if (comparison == 0)
                return true;

            if (comparison < 0)
                i = 2 * i + 2;
            else
                i = 2 * i + 1;
        }

        return false;
    }

    public const uint ItemCount = 100;
    public const uint MinLength = 1;
    public const uint MaxLength = 2;
}