// <auto-generated />
// This file is auto-generated. Do not edit manually.
// Structure: BinarySearch
#nullable enable
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

internal static class EytzingerSearchStructure_UInt32_4
{
    private static readonly uint[] _entries = new uint[] {
        2u, 1u, uint.MaxValue, uint.MinValue
    };

    
    public static bool Contains(uint value)
    {
        if (value < uint.MinValue || value > uint.MaxValue)
            return false;

        int i = 0;
        while (i < _entries.Length)
        {
            int comparison = _entries[i].CompareTo(value);

            if (comparison == 0)
                return true;

            if (comparison < 0)
                i = 2 * i + 2;
            else
                i = 2 * i + 1;
        }

        return false;
    }

    public const uint ItemCount = 4;
    public const uint MinValue = uint.MinValue;
    public const uint MaxValue = uint.MaxValue;
}