// <auto-generated />
// This file is auto-generated. Do not edit manually.
// Structure: BinarySearch
#nullable enable
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

internal static class BinarySearchStructure_Single_5
{
    private static readonly float[] _entries = new float[] {
        float.MinValue, -1f, 0f, 1f, float.MaxValue
    };

    
    public static bool Contains(float value)
    {
        if (value < float.MinValue || value > float.MaxValue)
            return false;

        int lo = 0;
        int hi = 4;
        while (lo <= hi)
        {
            int i = lo + ((hi - lo) >> 1);
            int order = _entries[i].CompareTo(value);

            if (order == 0)
                return true;
            if (order < 0)
                lo = i + 1;
            else
                hi = i - 1;
        }

        return ~lo >= 0;
    }

    public const uint ItemCount = 5;
    public const float MinValue = float.MinValue;
    public const float MaxValue = float.MaxValue;
}