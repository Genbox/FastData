// <auto-generated />
// This file is auto-generated. Do not edit manually.
// Structure: HashSet (HashSetChain)
#nullable enable
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

internal static class HashSetChainStructure_Single_5_HashZeroOrNaN
{
    private static readonly sbyte[] _buckets = new sbyte[] {
        0, 1, 4, 3, 5
     };

    private static readonly E[] _entries = {
        new E(1065353216, -1, 1f), new E(1073741824, -1, 2f), new E(1077936128, -1, 3f), new E(1082130432, -1, 4f), new E(1084227584, 1, 5f)
    };

    
    public static bool Contains(float value)
    {
        if (value < 1f || value > 5f)
            return false;

        ulong hash = Hash(value);
        uint index = (uint)(hash % 5);
        sbyte i = (sbyte)(_buckets[index] - 1);

        while (i >= 0)
        {
            ref E entry = ref _entries[i];

            if (entry.HashCode == hash && value == entry.Value)
                return true;

            i = entry.Next;
        }

        return false;
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    private static ulong Hash(float value)
    {
        return (ulong)Unsafe.ReadUnaligned<uint>(ref Unsafe.As<float, byte>(ref value));
    }

    [StructLayout(LayoutKind.Auto)]
    private readonly struct E
    {
        internal readonly ulong HashCode;
        internal readonly sbyte Next;
        internal readonly float Value;

        internal E(ulong hashCode, sbyte next, float value)
        {
            HashCode = hashCode;
            Next = next;
            Value = value;
        }
    }

    public const uint ItemCount = 5;
    public const float MinValue = 1f;
    public const float MaxValue = 5f;
}