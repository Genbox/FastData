// <auto-generated />
// This file is auto-generated. Do not edit manually.
// Structure: HashSet (HashSetChain)
#nullable enable
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

internal static class HashSetChainStructure_Byte_3
{
    private static readonly sbyte[] _buckets = new sbyte[] {
        3, 2, 0
     };

    private static readonly E[] _entries = {
        new E(0, -1, byte.MinValue), new E(1, -1, 1), new E(255, 0, byte.MaxValue)
    };

    
    public static bool Contains(byte value)
    {
        if (value < byte.MinValue || value > byte.MaxValue)
            return false;

        ulong hash = Hash(value);
        uint index = (uint)(hash % 3);
        sbyte i = (sbyte)(_buckets[index] - 1);

        while (i >= 0)
        {
            ref E entry = ref _entries[i];

            if (entry.HashCode == hash && value == entry.Value)
                return true;

            i = entry.Next;
        }

        return false;
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    private static ulong Hash(byte value)
    {
        return (ulong)value;
    }

    [StructLayout(LayoutKind.Auto)]
    private readonly struct E
    {
        internal readonly ulong HashCode;
        internal readonly sbyte Next;
        internal readonly byte Value;

        internal E(ulong hashCode, sbyte next, byte value)
        {
            HashCode = hashCode;
            Next = next;
            Value = value;
        }
    }

    public const uint ItemCount = 3;
    public const byte MinValue = byte.MinValue;
    public const byte MaxValue = byte.MaxValue;
}