// <auto-generated />
// This file is auto-generated. Do not edit manually.
// Structure: HashTable (HashTableChain)
#nullable enable
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

internal static class HashTableChainStructure_Double_5_HashZeroOrNaN
{
    private static readonly sbyte[] _buckets = new sbyte[] {
        4, 0, 3, 1, 5
     };

    private static readonly E[] _entries = {
        new E(4607182418800017408, -1, 1.0), new E(4611686018427387904, -1, 2.0), new E(4613937818241073152, -1, 3.0), new E(4616189618054758400, -1, 4.0), new E(4617315517961601024, 1, 5.0)
    };

    
    public static bool Contains(double key)
    {
        if (key < 1.0 || key > 5.0)
            return false;

        ulong hash = Hash(key);
        uint index = (uint)(hash % 5);
        sbyte i = (sbyte)(_buckets[index] - 1);

        while (i >= 0)
        {
            ref E entry = ref _entries[i];

            if (entry.HashCode == hash && key == entry.Key)
                return true;

            i = entry.Next;
        }

        return false;
    }


    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    private static ulong Hash(double value)
    {
        return Unsafe.ReadUnaligned<ulong>(ref Unsafe.As<double, byte>(ref value));
    }

    [StructLayout(LayoutKind.Auto)]
    private readonly struct E
    {
        internal readonly ulong HashCode;
        internal readonly sbyte Next;
        internal readonly double Key;

        internal E(ulong hashCode, sbyte next, double key)
        {
            HashCode = hashCode;
            Next = next;
            Key = key;
        }
    }

    public const uint ItemCount = 5;
    public const double MinKey = 1.0;
    public const double MaxKey = 5.0;
}