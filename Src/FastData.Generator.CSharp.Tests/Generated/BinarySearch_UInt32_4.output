// <auto-generated />
// Structure: BinarySearch
#nullable enable
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using Genbox.FastData.Helpers;


internal static class MyData 
{
    private static uint[] _entries = new uint[] {
        0u, 1u, 2u, 4294967295u
    };

    
    public static bool Contains(uint value)
    {
        if (value < 0u || value > 4294967295u)
            return false;

        int lo = 0;
        int hi = 3;
        while (lo <= hi)
        {
            int i = lo + ((hi - lo) >> 1);
            int order = _entries[i].CompareTo(value);

            if (order == 0)
                return true;
            if (order < 0)
                lo = i + 1;
            else
                hi = i - 1;
        }

        return ~lo >= 0;
    }

    public const int ItemCount = 4;
    public const uint MinValue = 0u;
    public const uint MaxValue = 4294967295u;
}