// <auto-generated />
#nullable enable
using Genbox.FastData.Abstracts;
using Genbox.FastData.Generator.CSharp.Abstracts;
using Genbox.FastData.Helpers;
using Genbox.FastData;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System;


internal partial class PerfectHashBruteForce_UInt32_3  : IFastSet<UInt32>
{
    private E[] _entries = {
        new E(0, 3), new E(2, 1), new E(1, 2)
    };

    
    public bool Contains(uint value)
    {
        if (value < 0 || value > 2)
           return false;

        uint hash = Hash(value, 3);
        uint index = MathHelper.FastMod(hash, 3, 6148914691236517206);
        ref E entry = ref _entries[index];

        return hash == entry.HashCode && value.Equals(entry.Value);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static uint Hash(uint value, uint seed) => unchecked((uint)(value ^ seed));

    [StructLayout(LayoutKind.Auto)]
    private struct E
    {
        internal E(uint value, uint hashCode)
        {
            Value = value;
            HashCode = hashCode;
        }

        internal uint Value;
        internal uint HashCode;
    }

    public const int ItemCount = 3;
    public int Length => 3;
}