// <auto-generated />
// Structure: KeyLength
#nullable enable
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using Genbox.FastData.Helpers;
using Genbox.FastData.Generator.CSharp.Abstracts;


internal partial class MyData : IFastSet<String>
{
    private readonly string[]?[] _entries = new string[]?[] {
        new [] {"0","1","2","3","4","5","6","7","8","9"},
        new [] {"10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99"}
    };

    
    public bool Contains(string value)
    {
        if (value.Length < 1 || value.Length > 2)
           return false;
        string[]? bucket = _entries[value.Length - 1];

        if (bucket == null)
            return false;

        foreach (string str in bucket)
        {
            if (StringComparer.Ordinal.Equals(value, str))
                return true;
        }

        return false;
    }

    public const int ItemCount = 100;
    public int Length => ItemCount;
    public const int MinLength = 1;
    public const int MaxLength = 2;
}