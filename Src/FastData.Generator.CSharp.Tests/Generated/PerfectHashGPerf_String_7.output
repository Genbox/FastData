// <auto-generated />
#nullable enable
using Genbox.FastData.Abstracts;
using Genbox.FastData.Generator.CSharp.Abstracts;
using Genbox.FastData.Helpers;
using Genbox.FastData;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System;


internal partial class PerfectHashGPerf_String_7  : IFastSet<String>
{
    private sbyte[] _asso = new sbyte[] {
        5, 43, 43, 43, 43, 43, 43, 43, 43, 43, 
        43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 
        43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 
        43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 
        43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 
        43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 
        43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 
        43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 
        43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 
        43, 43, 43, 43, 43, 43, 43, 0, 43, 43, 
        43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 
        43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 
        43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 
        43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 
        43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 
        43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 
        43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 
        43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 
        43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 
        43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 
        43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 
        43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 
        43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 
        43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 
        43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 
        43, 43, 43, 43, 43, 43
    };

    private string[] _items = {
        "aaaaaaaaaa", null, null, null, null, "aaaaaaaaa", null, null, null, null, 
        "aaaaaaaa", null, null, null, null, "aaaaaaa", null, null, null, null, 
        "aaaaaa", null, null, null, null, "aaaaa", null, null, null, null, 
        "aaa"
    };

    
    public bool Contains(string value)
    {
       if ((1012UL & (1UL << (value.Length - 1) % 64)) == 0)
           return false;

        uint key = Hash(value);

        if (key > 42)
            return false;

        return StringComparer.Ordinal.Equals(_items[key], value);
    }

    private  uint Hash(string str) => (uint)(_asso[str[3]] + _asso[str[5]] + _asso[str[6]] + _asso[str[7]] + _asso[str[8]] + _asso[str[9]]);

    public const int ItemCount = 7;
    public int Length => 7;
}