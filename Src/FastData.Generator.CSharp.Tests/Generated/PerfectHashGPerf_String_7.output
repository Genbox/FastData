// <auto-generated />
// Structure: PerfectHashGPerf
#nullable enable
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using Genbox.FastData.Helpers;


internal static class MyData 
{
    private static readonly byte[] _asso = new byte[] {
        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 21, 7, 
        2, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 5, 21, 21, 
        21, 0, 21, 21, 21, 0, 21, 21, 21, 0, 
        21, 21, 21, 21, 21, 21, 0, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21
    };

    private static readonly string[] _items = {
        "item", null, "2", null, null, "a", null, "1", null, null, 
        "aa", null, null, null, null, "aaa", null, null, null, null, 
        "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    };

    
    public static bool Contains(string value)
    {
        if (value.Length < 1u || value.Length > 255u)
            return false;

        uint hash = Hash(value);

        if (hash > 20)
            return false;

        return StringComparer.Ordinal.Equals(value, _items[hash]);
    }

    private static uint Hash(string str)
    {
        uint hash = 0;
        switch (str.Length)
        {
            default:
                hash += (uint)_asso[str[3]];
                goto case 3;
            case 3:
                hash += (uint)_asso[str[2]];
                goto case 2;
            case 2:
                hash += (uint)_asso[str[1]];
                goto case 1;
            case 1:
                break;
        }

        return hash;
    }


    public const int ItemCount = 7;
    public const int MinLength = 1;
    public const int MaxLength = 255;
}