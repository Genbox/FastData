// <auto-generated />
// Structure: EytzingerSearch
#nullable enable
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using Genbox.FastData.Helpers;
using Genbox.FastData.Generator.CSharp.Abstracts;


internal partial class EytzingerSearch_Byte_3 : IFastSet<Byte>
{
    private byte[] _entries = new byte[] {
        1, 0, 2
    };

    
    public bool Contains(byte value)
    {
        if (value < 0 || value > 2)
           return false;

        int i = 0;
        while (i < _entries.Length)
        {
            int comparison = _entries[i].CompareTo(value);

            if (comparison == 0)
                return true;

            if (comparison < 0)
                i = 2 * i + 2;
            else
                i = 2 * i + 1;
        }

        return false;
    }

    public const int ItemCount = 3;
    public int Length => ItemCount;
    public const uint MinValue = 0;
    public const uint MaxValue = 2;
}