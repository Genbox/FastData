// <auto-generated />
#nullable enable
using Genbox.FastData.Abstracts;
using Genbox.FastData.Generator.CSharp.Abstracts;
using Genbox.FastData.Helpers;
using Genbox.FastData;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System;


internal partial class MyData  : IFastSet<Int32>
{
    private Entry[] _entries = new Entry[] {
        new Entry(1, 0u),
        new Entry(10, 11u),
        new Entry(3, 2u),
        new Entry(2, 3u),
        new Entry(5, 4u),
        new Entry(4, 5u),
        new Entry(7, 6u),
        new Entry(6, 7u),
        new Entry(9, 8u),
        new Entry(8, 9u)
    };

    
    public bool Contains(Int32 value)
    {
        if (value < 1 || value > 10)
           return false;

        uint hash = Hash(value, 1);
        uint index = MathHelper.FastMod(hash, 10, 1844674407370955162);
        ref Entry entry = ref _entries[index];

        return hash == entry.HashCode && value.Equals(entry.Value);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static uint Hash(Int32 value, uint seed) => unchecked((uint)(value ^ seed));

    [StructLayout(LayoutKind.Auto)]
    private struct Entry
    {
        public Entry(Int32 value, uint hashCode)
        {
            Value = value;
            HashCode = hashCode;
        }

        public Int32 Value;
        public uint HashCode;
    }

    public const int ItemCount = 10;
    public int Length => 10;
}