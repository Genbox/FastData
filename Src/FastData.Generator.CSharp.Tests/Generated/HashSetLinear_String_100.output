// <auto-generated />
#nullable enable
using Genbox.FastData.Abstracts;
using Genbox.FastData.Generator.CSharp.Abstracts;
using Genbox.FastData.Helpers;
using Genbox.FastData;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System;


internal partial class HashSetLinear_String_100  : IFastSet<String>
{
    private readonly B[] _buckets = {
        new B(0, 0), new B(0, 0), new B(1, 1), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(2, 2), new B(0, 0), new B(3, 3), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(4, 4), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(5, 5), new B(6, 6), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(7, 7), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(8, 8), new B(9, 9), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(10, 10), new B(0, 0), new B(11, 11), new B(12, 12), new B(0, 0), new B(0, 0), new B(0, 0), new B(13, 13), new B(0, 0), 
        new B(14, 14), new B(15, 15), new B(0, 0), new B(16, 16), new B(0, 0), new B(0, 0), new B(0, 0), new B(17, 17), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(18, 18), new B(0, 0), new B(0, 0), new B(19, 19), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(20, 20), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(21, 21), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(22, 22), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(23, 23), new B(0, 0), new B(0, 0), new B(0, 0), new B(24, 25), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(26, 26), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(27, 27), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(28, 28), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(29, 29), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(30, 30), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(31, 31), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(32, 32), new B(33, 33), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(34, 34), new B(35, 35), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(36, 36), 
        new B(37, 37), new B(0, 0), new B(38, 38), new B(0, 0), new B(0, 0), new B(0, 0), new B(39, 39), new B(40, 40), new B(0, 0), new B(41, 41), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(42, 42), new B(0, 0), new B(43, 43), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(44, 44), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(45, 45), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(46, 46), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(47, 47), new B(0, 0), new B(0, 0), new B(48, 48), new B(49, 49), new B(0, 0), new B(0, 0), new B(50, 50), new B(0, 0), new B(0, 0), 
        new B(51, 51), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(52, 52), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(53, 53), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(54, 54), new B(0, 0), 
        new B(55, 55), new B(0, 0), new B(56, 56), new B(0, 0), new B(0, 0), new B(0, 0), new B(57, 57), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(58, 58), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(59, 59), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(60, 60), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(61, 61), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(62, 62), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(63, 63), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(64, 64), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(65, 65), new B(66, 66), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(67, 67), new B(68, 68), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(69, 69), new B(70, 70), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(71, 71), new B(0, 0), new B(72, 72), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(73, 73), new B(0, 0), new B(74, 74), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(75, 75), new B(0, 0), new B(0, 0), new B(76, 76), new B(0, 0), new B(0, 0), new B(0, 0), new B(77, 77), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(78, 78), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(79, 79), new B(0, 0), new B(80, 80), 
        new B(0, 0), new B(81, 81), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(82, 82), new B(0, 0), new B(83, 83), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(84, 84), new B(0, 0), new B(85, 85), new B(0, 0), new B(0, 0), new B(0, 0), new B(86, 86), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(87, 87), new B(0, 0), new B(0, 0), new B(88, 88), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(89, 89), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(90, 90), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(91, 91), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(92, 92), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(0, 0), new B(0, 0), new B(0, 0), new B(93, 93), new B(94, 94), new B(0, 0), new B(95, 95), new B(0, 0), new B(0, 0), new B(0, 0), 
        new B(96, 96), new B(97, 97), new B(0, 0), new B(98, 98), new B(0, 0), new B(0, 0), new B(0, 0), new B(99, 99), new B(0, 0), new B(0, 0), 
        new B(0, 0)
    };

    private readonly string[] _items = new string[] {
        "95", "48", "94", "49", "19", "79", "18", "78", "0", "57", 
        "40", "86", "56", "41", "87", "55", "93", "34", "23", "37", 
        "36", "11", "10", "17", "89", "8", "24", "73", "72", "75", 
        "39", "38", "60", "1", "61", "2", "84", "54", "92", "85", 
        "53", "91", "52", "90", "31", "30", "33", "16", "68", "9", 
        "15", "69", "46", "47", "99", "44", "82", "25", "26", "27", 
        "74", "77", "76", "59", "58", "62", "3", "63", "4", "64", 
        "5", "51", "97", "50", "96", "28", "32", "29", "14", "98", 
        "45", "83", "42", "80", "43", "81", "20", "21", "35", "22", 
        "13", "12", "88", "65", "6", "71", "66", "7", "70", "67"
    };

    private readonly uint[] _hashCodes = {
        4093830826, 3320761178, 2527746885, 1754677237, 3865208206, 2305772480, 2299124265, 739688539, 380679832, 3750896896, 
        2964530818, 2951234388, 2184812955, 1398446877, 1385150447, 618729014, 605432584, 3629937371, 2843571293, 2063853430, 
        497769489, 3508977846, 1942893905, 376809964, 4161087969, 24449472, 921256992, 3824802254, 2258718313, 692634372, 
        3582883204, 2016799263, 2682205816, 3109563187, 1116121875, 1543479246, 4114033802, 3347612369, 3334315939, 2547949861, 
        1781528428, 1768231998, 215444487, 202148057, 3226652844, 1660568903, 94484962, 3105693319, 2325975456, 2753332827, 
        1539609378, 759891515, 3771099872, 2205015931, 1412001638, 638931990, 625635560, 3650140347, 2084056406, 517972465, 
        3421517727, 1855433786, 289349845, 3300558202, 1734474261, 3845005230, 4272362601, 2278921289, 2706278660, 712837348, 
        1140194719, 2944327842, 2931031412, 1378243901, 1364947471, 3603086180, 2823368317, 2037002239, 4268492733, 4140884993, 
        3367815345, 3354518915, 1801731404, 1788434974, 235647463, 222351033, 3246855820, 1680771879, 901054016, 114687938, 
        2346178432, 780094491, 1432204614, 3441720703, 3869078074, 2662002840, 1875636762, 2302994133, 1095918899, 309552821
    };

    
    public bool Contains(string value)
    {
        if (value.Length < 1 || value.Length > 2)
           return false;

        uint hash = Hash(value);
        ref B b = ref _buckets[MathHelper.FastMod(hash, 631, 29234142747558719)];

        byte index = b.StartIndex;
        byte endIndex = b.EndIndex;

        while (index <= endIndex)
        {
            if (_hashCodes[index] == hash && StringComparer.Ordinal.Equals(value, _items[index]))
                return true;

            index++;
        }

        return false;
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static uint Hash(String value) => HashHelper.HashString(value);

    [StructLayout(LayoutKind.Auto)]
    private struct B
    {
        internal B(byte startIndex, byte endIndex)
        {
            StartIndex = startIndex;
            EndIndex = endIndex;
        }

        internal byte StartIndex;
        internal byte EndIndex;
    }

    public const int ItemCount = 100;
    public int Length => 100;
}