// <auto-generated />
#nullable enable
using Genbox.FastData.Abstracts;
using Genbox.FastData.Generator.CSharp.Abstracts;
using Genbox.FastData.Helpers;
using Genbox.FastData;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System;


internal partial class EytzingerSearch_Int64_3  : IFastSet<Int64>
{
    private long[] _entries = new long[] {
        0, -1, 1
    };

    
    public bool Contains(long value)
    {
        if (value < -1 || value > 1)
           return false;

        int i = 0;
        while (i < _entries.Length)
        {
            int comparison = _entries[i].CompareTo(value);

            if (comparison == 0)
                return true;

            if (comparison < 0)
                i = 2 * i + 2;
            else
                i = 2 * i + 1;
        }

        return false;
    }

    public const int ItemCount = 3;
    public int Length => 3;
}