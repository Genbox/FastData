// <auto-generated />
// Structure: PerfectHashGPerf
#nullable enable
using Genbox.FastData.Abstracts;
using Genbox.FastData.Generator.CSharp.Abstracts;
using Genbox.FastData.Helpers;
using Genbox.FastData;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System;


internal partial class PerfectHashGPerf_String_100 : IFastSet<String>
{
    private short[] _asso = new short[] {
        269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 
        269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 
        269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 
        269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 
        269, 269, 269, 269, 269, 269, 269, 269, 223, 178, 
        173, 127, 122, 110, 105, 60, 55, 5, 39, 4, 
        12, 2, 45, 35, 25, 15, 269, 269, 269, 269, 
        269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 
        269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 
        269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 
        269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 
        269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 
        269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 
        269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 
        269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 
        269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 
        269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 
        269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 
        269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 
        269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 
        269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 
        269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 
        269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 
        269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 
        269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 
        269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 
        269, 269, 269, 269
    };

    private string[] _items = {
        null, null, "5", null, "3", "1", null, "59", null, "39", 
        "19", null, "4", null, null, "9", null, "49", null, null, 
        "99", null, null, null, null, "8", null, null, null, null, 
        "89", null, null, null, null, "7", null, null, null, "2", 
        "79", null, null, null, "29", "6", null, null, null, null, 
        "69", null, null, null, null, "0", null, "58", null, "38", 
        "18", null, "57", null, "37", "17", null, "48", null, null, 
        "98", null, "47", null, null, "97", null, null, null, null, 
        "88", null, null, null, null, "87", null, null, null, null, 
        "78", null, null, null, "28", "77", null, null, null, "27", 
        "68", null, null, null, null, "67", null, "56", null, "36", 
        "16", null, "55", null, "35", "15", null, "46", null, null, 
        "96", null, "45", null, "54", "95", "34", "14", null, "53", 
        "86", "33", "13", null, "44", "85", null, "94", null, "43", 
        "76", null, "93", null, "26", "75", null, "84", null, "25", 
        "66", null, "83", null, null, "65", null, "74", null, null, 
        null, "24", "73", null, null, null, "23", "64", null, null, 
        null, null, "63", null, null, "52", null, "32", "12", null, 
        "51", null, "31", "11", null, "42", null, null, "92", null, 
        "41", null, null, "91", null, null, null, null, "82", null, 
        null, null, null, "81", null, null, null, null, "72", null, 
        null, null, "22", "71", null, null, null, "21", "62", null, 
        null, null, null, "61", null, "50", null, "30", "10", null, 
        null, null, null, null, null, "40", null, null, "90", null, 
        null, null, null, null, null, null, null, null, "80", null, 
        null, null, null, null, null, null, null, null, "70", null, 
        null, null, "20", null, null, null, null, null, "60"
    };

    
    public bool Contains(string value)
    {
        if (value.Length < 1 || value.Length > 2)
           return false;

        uint hash = Hash(value);

        if (hash > 268)
            return false;

        return StringComparer.Ordinal.Equals(value, _items[hash]);
    }

    private uint Hash(string str)
    {
        uint hash = 0;
        switch (str.Length)
        {
            default:
                hash += (uint)_asso[str[1]];
                goto case 1;
            case 1:
                hash += (uint)_asso[str[0]+8];
                break;
            }

            return hash;
    }


    public const int ItemCount = 100;
    public int Length => ItemCount;
    public const int MinLength = 1;
    public const int MaxLength = 2;
}