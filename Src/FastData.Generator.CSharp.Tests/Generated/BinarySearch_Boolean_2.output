// <auto-generated />
// Structure: BinarySearch
#nullable enable
using Genbox.FastData.Abstracts;
using Genbox.FastData.Generator.CSharp.Abstracts;
using Genbox.FastData.Helpers;
using Genbox.FastData;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System;


internal partial class BinarySearch_Boolean_2 : IFastSet<Boolean>
{
    private bool[] _entries = new bool[] {
        false, true
    };

    
    public bool Contains(bool value)
    {


        int lo = 0;
        int hi = 1;
        while (lo <= hi)
        {
            int i = lo + ((hi - lo) >> 1);
            int order = _entries[i].CompareTo(value);

            if (order == 0)
                return true;
            if (order < 0)
                lo = i + 1;
            else
                hi = i - 1;
        }

        return ((~lo) >= 0);
    }

    public const int ItemCount = 2;
    public int Length => ItemCount;
}