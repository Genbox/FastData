// <auto-generated />
#nullable enable
using Genbox.FastData.Abstracts;
using Genbox.FastData.Generator.CSharp.Abstracts;
using Genbox.FastData.Helpers;
using Genbox.FastData;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System;


internal partial class BinarySearch_String_3  : IFastSet<String>
{
    private string[] _entries = new string[] {
        "item1", "item2", "item3"
    };

    
    public bool Contains(string value)
    {
       if (value.Length != 5)
           return false;

        int lo = 0;
        int hi = 2;
        while (lo <= hi)
        {
            int i = lo + ((hi - lo) >> 1);
            int order = StringComparer.Ordinal.Compare(_entries[i], value);

            if (order == 0)
                return true;
            if (order < 0)
                lo = i + 1;
            else
                hi = i - 1;
        }

        return ((~lo) >= 0);
    }

    public const int ItemCount = 3;
    public int Length => 3;
}