// <auto-generated />
// Structure: BinarySearch
#nullable enable
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using Genbox.FastData.Helpers;
using Genbox.FastData.Generator.CSharp.Abstracts;


internal partial class MyData : IFastSet<String>
{
    private string[] _entries = new string[] {
        "aaa", "aaaaa", "aaaaaa", "aaaaaaa", "aaaaaaaa", "aaaaaaaaa", "aaaaaaaaaa"
    };

    
    public bool Contains(string value)
    {
       if ((1012UL & (1UL << (value.Length - 1) % 64)) == 0)
           return false;

        int lo = 0;
        int hi = 6;
        while (lo <= hi)
        {
            int i = lo + ((hi - lo) >> 1);
            int order = StringComparer.Ordinal.Compare(_entries[i], value);

            if (order == 0)
                return true;
            if (order < 0)
                lo = i + 1;
            else
                hi = i - 1;
        }

        return ((~lo) >= 0);
    }

    public const int ItemCount = 7;
    public int Length => ItemCount;
    public const int MinLength = 3;
    public const int MaxLength = 10;
}