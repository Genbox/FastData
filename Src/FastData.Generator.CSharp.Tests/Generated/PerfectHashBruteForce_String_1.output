// <auto-generated />
// Structure: PerfectHashBruteForce
#nullable enable
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using Genbox.FastData.Helpers;
using Genbox.FastData.Generator.CSharp.Abstracts;


internal partial class PerfectHashBruteForce_String_1 : IFastSet<String>
{
    private E[] _entries = {
        new E("value", 245013247)
    };

    
    public bool Contains(string value)
    {
       if (value.Length != 5)
           return false;

        uint hash = Hash(value, 1);
        uint index = 0;
        ref E entry = ref _entries[index];

        return hash == entry.HashCode && StringComparer.Ordinal.Equals(value, entry.Value);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static uint Hash(string value, uint seed) => HashHelper.HashStringSeed(value, seed);

    [StructLayout(LayoutKind.Auto)]
    private struct E
    {
        internal E(string value, uint hashCode)
        {
            Value = value;
            HashCode = hashCode;
        }

        internal string Value;
        internal uint HashCode;
    }

    public const int ItemCount = 1;
    public int Length => ItemCount;
    public const int MinLength = 5;
    public const int MaxLength = 5;
}