// <auto-generated />
// This file is auto-generated. Do not edit manually.
// Structure: HashSetPerfect
#nullable enable
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;


internal static class MyData
{
    private static readonly E[] _entries = {
        new E("item1", 2617859997), new E("item3", 677793355), new E("item2", 1354700345)
    };

    
    public static bool Contains(string value)
    {
        if (value.Length != 5u)
            return false;

        ulong hash = Mixer(Hash(value) ^ 7);
        uint index = hash % 3;
        ref E entry = ref _entries[index];

        return hash == entry.HashCode && StringComparer.Ordinal.Equals(value, entry.Value);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    private static ulong Hash(string value)
    {
         ulong hash = 352654597;

         ref char ptr = ref MemoryMarshal.GetReference(value.AsSpan());
         int len = value.Length;

         while (len-- > 0)
         {
             hash = (((hash << 5) | (hash >> 27)) + hash) ^ ptr;
             ptr = ref Unsafe.Add(ref ptr, 1);
         }

         return 352654597 + (hash * 1566083941);
    }

      [MethodImpl(MethodImplOptions.AggressiveInlining)]
      private static ulong Mixer(ulong h)
      {
          h ^= h >> 33;
          h *= 0xFF51AFD7ED558CCD;
          h ^= h >> 33;
          h *= 0xC4CEB9FE1A85EC53;
          h ^= h >> 33;
          return h;
      }

    [StructLayout(LayoutKind.Auto)]
    private struct E
    {
        internal E(string value, ulong hashCode)
        {
            Value = value;
            HashCode = hashCode;
        }

        internal string Value;
        internal ulong HashCode;
    }

    public const uint ItemCount = 3;
    public const uint MinLength = 5;
    public const uint MaxLength = 5;
}