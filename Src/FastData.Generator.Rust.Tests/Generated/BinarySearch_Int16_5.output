//! This file is auto-generated. Do not edit manually.
//! Structure: BinarySearch
#![allow(unused_parens)]
#![allow(missing_docs)]
pub struct MyData;

impl MyData {
    const ENTRIES: [i16; 5] = [
        -32768, -1, 0, 1, 32767
    ];

    pub fn contains(value: i16) -> bool {
        if value < -32768 || value > 32767 {
            return false;
        }

        let mut lo: usize = 0;
        let mut hi: usize = 4;
        while lo <= hi {
            let i = lo + ((hi - lo) >> 1);
            let order = if value > Self::ENTRIES[i] { 1 } else if value < Self::ENTRIES[i] { -1 } else { 0 };

            if order == 0 {
                return true;
            }
            if order < 0 {
                lo = i + 1;
            } else {
                hi = i - 1;
            }
        }

        return (!lo) >= 0;
    }

    pub const ITEM_COUNT: usize = 5;
    pub const MIN_VALUE: i16 = -32768;
    pub const MAX_VALUE: i16 = 32767;
}