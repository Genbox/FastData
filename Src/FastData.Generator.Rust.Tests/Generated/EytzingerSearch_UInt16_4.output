//! This file is auto-generated. Do not edit manually.
//! Structure: EytzingerSearch
#![allow(unused_parens)]
#![allow(missing_docs)]
pub struct MyData;

impl MyData {
    const ENTRIES: [u16; 4] = [
        2, 1, 65535, 0
    ];

    pub fn contains(value: u16) -> bool {
        if value < 0 || value > 65535 {
            return false;
        }

        let mut i: usize = 0;
        while i < Self::ENTRIES.len() {
            let comparison = if value > Self::ENTRIES[i] { 1 } else if value < Self::ENTRIES[i] { -1 } else { 0 };

            if comparison == 0 {
                return true;
            }
            if comparison < 0 {
                i = 2 * i + 2;
            } else {
                i = 2 * i + 1;
            }
        }

        false
    }

    pub const ITEM_COUNT: usize = 4;
    pub const MIN_VALUE: u16 = 0;
    pub const MAX_VALUE: u16 = 65535;
}