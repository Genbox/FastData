//! This file is auto-generated. Do not edit manually.
//! Structure: EytzingerSearch
#![allow(unused_parens)]
#![allow(missing_docs)]
pub struct MyData;

impl MyData {
    const ENTRIES: [i64; 5] = [
        1, -1, 9223372036854775807, -9223372036854775808, 0
    ];

    pub fn contains(value: i64) -> bool {
        if value < -9223372036854775808 || value > 9223372036854775807 {
            return false;
        }

        let mut i: usize = 0;
        while i < Self::ENTRIES.len() {
            let comparison = if value > Self::ENTRIES[i] { 1 } else if value < Self::ENTRIES[i] { -1 } else { 0 };

            if comparison == 0 {
                return true;
            }
            if comparison < 0 {
                i = 2 * i + 2;
            } else {
                i = 2 * i + 1;
            }
        }

        false
    }

    pub const ITEM_COUNT: usize = 5;
    pub const MIN_VALUE: i64 = -9223372036854775808;
    pub const MAX_VALUE: i64 = 9223372036854775807;
}