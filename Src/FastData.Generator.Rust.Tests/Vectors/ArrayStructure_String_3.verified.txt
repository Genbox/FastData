//! This file is auto-generated. Do not edit manually.
//! Structure: Array
#![allow(unused_parens)]
#![allow(missing_docs)]
#![allow(unused_imports)]
#![allow(unused_unsafe)]
use std::ptr;

pub struct ArrayStructure_String_3;

impl ArrayStructure_String_3 {
    const KEYS: [&'static str; 3] = [
        "a", "item", "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    ];

    #[must_use]
    pub fn contains(key: &'static str) -> bool {
        if key.len() < 1 as usize || key.len() > 255 as usize {
            return false;
        }

        for entry in Self::KEYS.iter() {
            if *entry == key {
                return true;
            }
        }
        false
    }

    pub const ITEM_COUNT: usize = 3;
    pub const MIN_KEY_LENGTH: usize = 1;
    pub const MAX_KEY_LENGTH: usize = 255;
}