//! This file is auto-generated. Do not edit manually.
//! Structure: BinarySearch
#![allow(unused_parens)]
#![allow(missing_docs)]
#![allow(unused_imports)]
#![allow(unused_unsafe)]
use std::ptr;

pub struct BinarySearchStructure_Int64_5;

impl BinarySearchStructure_Int64_5 {
    const ENTRIES: [i64; 5] = [
        i64::MIN, -5, 0, 1, 9223372036854775806
    ];

    #[must_use]
    pub fn contains(value: i64) -> bool {
        if value < i64::MIN || value > 9223372036854775806 {
            return false;
        }

        let mut lo: usize = 0;
        let mut hi: usize = 4;
        while lo <= hi {
            let i = lo + ((hi - lo) >> 1);
            let entry = Self::ENTRIES[i];

            if entry == value {
                return true;
            }
            if entry < value {
                lo = i + 1;
            } else {
                hi = i - 1;
            }
        }

        false
    }

    pub const ITEM_COUNT: usize = 5;
    pub const MIN_VALUE: i64 = i64::MIN;
    pub const MAX_VALUE: i64 = 9223372036854775806;
}