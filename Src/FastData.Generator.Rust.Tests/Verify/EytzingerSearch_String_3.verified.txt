//! This file is auto-generated. Do not edit manually.
//! Structure: EytzingerSearch
#![allow(unused_parens)]
#![allow(missing_docs)]
#![allow(unused_imports)]
#![allow(unused_unsafe)]
use std::ptr;

pub struct MyData;

impl MyData {
    const ENTRIES: [&str; 3] = [
        "item2", "item1", "item3"
    ];

    pub fn contains(value: &str) -> bool {
        if value.len() != 5 {
            return false;
        }

        let mut i: usize = 0;
        while i < Self::ENTRIES.len() {
            let entry = Self::ENTRIES[i];

            if entry == value {
                return true;
            }
            if entry < value {
                i = 2 * i + 2;
            } else {
                i = 2 * i + 1;
            }
        }

        return false;
    }

    pub const ITEM_COUNT: usize = 3;
    pub const MIN_LENGTH: usize = 5;
    pub const MAX_LENGTH: usize = 5;
}