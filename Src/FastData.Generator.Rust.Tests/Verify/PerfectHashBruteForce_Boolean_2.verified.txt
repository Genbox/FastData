//! This file is auto-generated. Do not edit manually.
//! Structure: PerfectHashBruteForce
#![allow(unused_parens)]
#![allow(missing_docs)]
pub struct MyData;

impl MyData {
    const ENTRIES: [E; 2] = [
        E { value: true, hash_code: 0 }, E { value: false, hash_code: 1 }
    ];

    fn get_hash(value: bool, seed: u32) -> u32 {
        (value as u32) ^ seed
    }

    pub fn contains(value: bool) -> bool {


        let hash = Self::get_hash(value, 1);
        let index = (hash % 2) as usize;
        let entry = &Self::ENTRIES[index];

        hash == entry.hash_code && value == entry.value
    }

    pub const ITEM_COUNT: usize = 2;
}
struct E {
    value: bool,
    hash_code: u32,
}
