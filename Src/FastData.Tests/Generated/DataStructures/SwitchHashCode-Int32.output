// <auto-generated />
#nullable enable
using Genbox.FastData.Abstracts;
using Genbox.FastData.Generator.CSharp.Abstracts;
using Genbox.FastData.Helpers;
using Genbox.FastData;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System;


internal partial class MyData  : IFastSet<Int32>
{
    
    public bool Contains(Int32 value)
    {
        if (value < 1 || value > 10)
           return false;

        switch (Hash(value))
        {
            case 1:
                 return value.Equals(1);
            case 2:
                 return value.Equals(2);
            case 3:
                 return value.Equals(3);
            case 4:
                 return value.Equals(4);
            case 5:
                 return value.Equals(5);
            case 6:
                 return value.Equals(6);
            case 7:
                 return value.Equals(7);
            case 8:
                 return value.Equals(8);
            case 9:
                 return value.Equals(9);
            case 10:
                 return value.Equals(10);
        }
        return false;
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static uint Hash(Int32 value) => unchecked((uint)value);

    public const int ItemCount = 10;
    public int Length => 10;
}