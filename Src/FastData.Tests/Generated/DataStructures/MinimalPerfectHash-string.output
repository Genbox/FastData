    private static Entry[] _entries = new Entry[] {
        new Entry("item7", 3915506720u),
        new Entry("item8", 2158895401u),
        new Entry("item2", 3292806802u),
        new Entry("item9", 4143051563u),
        new Entry("item1", 1569931034u),
        new Entry("item4", 1453648515u),
        new Entry("item6", 317535996u),
        new Entry("item3", 1436961117u),
        new Entry("item5", 886599238u),
        new Entry("item10", 2403939429u)
    };

    
    public static bool Contains(string value)
    {
        if (value.Length < 5 || value.Length > 6)
           return false;

        uint hash = Mix(HashHelper.HashStringSeed(value, 702));
        uint index = MathHelper.FastMod(hash, 10, 1844674407370955162);
        ref Entry entry = ref _entries[index];

        return hash == entry.HashCode && StringComparer.Ordinal.Equals(value, entry.Value);
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    private static uint Mix(uint h)
    {
        h ^= h >> 16;
        h *= 0x85ebca6b;
        h ^= h >> 13;
        h *= 0xc2b2ae35;
        h ^= h >> 16;
        return h;
    }

    [StructLayout(LayoutKind.Auto)]
    private struct Entry
    {
        public Entry(string value, uint hashCode)
        {
            Value = value;
            HashCode = hashCode;
        }

        public string Value;
        public uint HashCode;
    }