// <auto-generated />
#nullable enable
using Genbox.FastData.Abstracts;
using Genbox.FastData.Generator.CSharp.Abstracts;
using Genbox.FastData.Helpers;
using Genbox.FastData;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System;


internal partial class MyData  : IFastSet<String>
{
    
    public bool Contains(String value)
    {
        if (value.Length < 5 || value.Length > 6)
           return false;

        switch (Hash(value))
        {
            case 2011983611:
                 return StringComparer.Ordinal.Equals(value, "item1");
            case 3578067552:
                 return StringComparer.Ordinal.Equals(value, "item2");
            case 849184197:
                 return StringComparer.Ordinal.Equals(value, "item3");
            case 2415268138:
                 return StringComparer.Ordinal.Equals(value, "item4");
            case 3981352079:
                 return StringComparer.Ordinal.Equals(value, "item5");
            case 1252468724:
                 return StringComparer.Ordinal.Equals(value, "item6");
            case 2818552665:
                 return StringComparer.Ordinal.Equals(value, "item7");
            case 802130030:
                 return StringComparer.Ordinal.Equals(value, "item8");
            case 2368213971:
                 return StringComparer.Ordinal.Equals(value, "item9");
            case 1309368076:
                 return StringComparer.Ordinal.Equals(value, "item10");
        }
        return false;
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static uint Hash(String value) => HashHelper.HashString(value);

    public const int ItemCount = 10;
    public int Length => 10;
}