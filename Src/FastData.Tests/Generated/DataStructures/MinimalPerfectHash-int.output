    private static Entry[] _entries = new Entry[] {
        new Entry(6, 912853230u),
        new Entry(10, 2861009921u),
        new Entry(9, 1858290192u),
        new Entry(7, 2548655613u),
        new Entry(8, 2737821194u),
        new Entry(2, 374509275u),
        new Entry(1, 1220815836u),
        new Entry(3, 1768738647u),
        new Entry(5, 1443092418u),
        new Entry(4, 1098639589u)
    };

    
    public static bool Contains(int value)
    {
        if (value < 1 || value > 10)
           return false;

        uint hash = HashHelper.Mix(unchecked((uint)value + 9037));
        uint index = MathHelper.FastMod(hash, 10, 1844674407370955162);
        ref Entry entry = ref _entries[index];

        return hash == entry.HashCode && value.Equals(entry.Value);
    }

    [StructLayout(LayoutKind.Auto)]
    private struct Entry
    {
        public Entry(int value, uint hashCode)
        {
            Value = value;
            HashCode = hashCode;
        }

        public int Value;
        public uint HashCode;
    }