    private static readonly int[] _buckets = { 8, 9, 2, 0, 6, 7, 10, 3, 4, 5 };

    private static readonly Entry[] _entries = {
        new Entry(2011983611, -1, "item1"),
        new Entry(3578067552, -1, "item2"),
        new Entry(849184197, -1, "item3"),
        new Entry(2415268138, -1, "item4"),
        new Entry(3981352079, -1, "item5"),
        new Entry(1252468724, -1, "item6"),
        new Entry(2818552665, -1, "item7"),
        new Entry(802130030, -1, "item8"),
        new Entry(2368213971, 0, "item9"),
        new Entry(1309368076, -1, "item10")
    };

    
    public static bool Contains(string value)
    {
        if (value.Length < 5 || value.Length > 6)
           return false;

        uint hashCode = HashHelper.HashString(value);
        uint index = MathHelper.FastMod(hashCode, 10, 1844674407370955162);
        int i = _buckets[index] - 1;

        while (i >= 0)
        {
            ref Entry entry = ref _entries[i];

            if (entry.HashCode == hashCode && StringComparer.Ordinal.Equals(entry.Value, value))
                return true;

            i = entry.Next;
        }

        return false;
    }



    [StructLayout(LayoutKind.Auto)]
    private struct Entry
    {
        public uint HashCode;
        public short Next;
        public string Value;

        public Entry(uint hashCode, short next, string value)
        {
            HashCode = hashCode;
            Next = next;
            Value = value;
        }
    }