// <auto-generated />
#nullable enable
using Genbox.FastData.Abstracts;
using Genbox.FastData.Generator.CSharp.Abstracts;
using Genbox.FastData.Helpers;
using Genbox.FastData;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System;


internal static class MyData 
{
    private static readonly int[] _buckets = { 4, 0, 0, 3 };

    private static readonly Entry[] _entries = {
        new Entry(972181027, -1, "a"),
        new Entry(3645924380, -1, "aaa"),
        new Entry(3844005527, 0, "aaaaa"),
        new Entry(3612615712, 1, "aaaaaaa")
    };

    
    public static bool Contains(String value)
    {
       if ((85UL & 1UL << (value.Length -1) & 63) == 0)
           return false;

        uint hashCode = Hash(value);
        uint index = hashCode & 3;
        int i = _buckets[index] - 1;

        while (i >= 0)
        {
            ref Entry entry = ref _entries[i];

            if (entry.HashCode == hashCode && StringComparer.Ordinal.Equals(entry.Value, value))
                return true;

            i = entry.Next;
        }

        return false;
    }

    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static uint Hash(String value) => HashHelper.HashString(value);

    [StructLayout(LayoutKind.Auto)]
    private struct Entry
    {
        public uint HashCode;
        public short Next;
        public String Value;

        public Entry(uint hashCode, short next, String value)
        {
            HashCode = hashCode;
            Next = next;
            Value = value;
        }
    }

    public const int ItemCount = 4;
}